/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        // Custom hold-tap with longer tapping term for improved mod-tap behavior
        my_mod_tap: my_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;         // More time to distinguish hold from tap
            quick-tap-ms = <150>;            // Allows quick tap functionality
            require-prior-idle-ms = <100>;   // If another key was pressed within this time, prefer tap
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // Ogre Ergo layout with Corne-inspired bindings
            bindings = <
&kp GLOBE    &kp EQUAL       &kp N1                   &kp N2                   &kp N3                   &kp N4       &kp N5       &kp GRAVE         &kp PG_UP    &kp N6     &kp N7       &kp N8                        &kp N9                        &kp N0                    &kp MINUS            &kp BACKSPACE
           &kp TAB         &kp Q                    &kp W                    &kp E                    &kp R        &kp T        &kp RBKT          &kp LBKT     &kp Y      &kp U        &kp I                         &kp O                         &kp P                     &kp BACKSLASH
           &kp ESCAPE      &kp A                    &kp S                    &kp D                    &kp F        &kp G        &kp PG_DN         &kp SQT      &kp H      &kp J        &kp K                         &kp L                         &kp SEMI                  &my_mod_tap RIGHT_GUI SQT
           &kp LEFT_SHIFT  &my_mod_tap LCTRL Z      &my_mod_tap LEFT_GUI X   &my_mod_tap LEFT_ALT C   &kp V        &kp B                                       &kp N      &kp M        &my_mod_tap RIGHT_ALT COMMA   &my_mod_tap RIGHT_GUI PERIOD  &my_mod_tap RCTRL SLASH  &sk RIGHT_SHIFT
           &mt LCTRL GRAVE &kp LALT                 &kp LEFT                 &kp RIGHT                &sl 2        &lt 2 SPACE  &kp BSPC         &kp RALT     &kp ENTER  &lt 1 ENTER  &kp DOWN                      &kp UP                        &kp LBKT                  &kp RCTRL
            >;
        };

        sym {
            bindings = <
&trans  &trans           &kp F1           &kp F2           &kp F3                &kp F4                   &kp F5              &kp INS      &kp HOME       &kp F6         &kp F7         &kp F8         &kp F9                &kp F10               &kp F11          &kp F12
        &kp PLUS         &kp EXCLAMATION  &kp AT_SIGN      &kp HASH              &kp DOLLAR               &kp PERCENT         &trans       &trans         &kp CARET      &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS &kp UNDERSCORE
        &kp PAGE_UP      &kp PAGE_DOWN    &kp SLASH        &kp BACKSLASH         &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS &kp END   &trans         &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT             &kp UNDERSCORE        &kp DELETE
        &trans           &kp GRAVE        &kp LEFT_BRACE   &kp RIGHT_BRACE       &kp LEFT_BRACKET         &kp RIGHT_BRACKET                              &kp TILDE      &kp PIPE       &sk RIGHT_ALT  &sk RIGHT_GUI         &sk RCTRL             &trans
        &trans           &trans           &trans           &trans                &trans                   &trans              &trans       &trans         &trans         &trans         &trans         &trans                &trans                &trans
            >;
        };

        num {
            bindings = <
&trans  &trans    &trans           &trans           &trans           &trans  &trans     &trans   &trans     &trans       &trans        &trans                  &trans                  &trans             &trans     &trans
        &kp EQUAL &kp N1           &kp N2           &kp N3           &kp N4  &kp N5     &trans   &trans     &kp N6       &kp N7        &kp N8                  &kp N9                  &kp N0             &kp MINUS
        &trans    &kp F1           &kp F2           &kp F3           &kp F4  &kp F5     &trans   &trans     &kp F12      &kp NUMBER_4  &kp N5                  &kp NUMBER_6            &none              &trans
        &trans    &mt LCTRL F6     &mt LEFT_GUI F7  &mt LEFT_ALT F8  &kp F9  &kp F10             &kp F11    &kp NUMBER_1 &mt RIGHT_ALT NUMBER_2  &mt RIGHT_GUI NUMBER_3  &kp RIGHT_CONTROL  &trans
        &trans    &trans           &trans           &trans           &trans  &trans     &trans   &trans     &trans       &trans        &trans                  &trans                  &trans             &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans         &trans         &trans                             &trans                                  &trans               &trans          &trans   &trans     &trans          &trans        &trans        &trans     &trans     &trans     &trans
        &none          &kp TAB        &kp LS(TAB)                        &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS       &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS &kp K_VOLUME_UP &trans &trans &sk LA(LC(LG(LEFT_SHIFT))) &kp PAGE_DOWN &kp PG_UP &none &kp BACKSPACE &trans
        &trans         &none          &none                              &none                                   &none                &kp K_VOLUME_DOWN    &trans   &trans     &kp LEFT        &kp DOWN_ARROW &kp UP_ARROW &kp RIGHT &kp ENTER      &trans
        &trans         &kp LC(LS(H))  &kp RS(RC(L))                      &kp K_BACK                              &kp K_FORWARD        &kp K_PLAY_PAUSE                        &mo 4           &kp END        &kp HOME      &none      &kp DEL        &trans
        &trans         &trans         &trans                             &trans                                  &trans               &trans               &trans   &trans     &trans          &trans         &trans        &trans     &trans         &trans
            >;
        };

        settings {
            bindings = <
&trans  &trans          &trans        &trans             &trans            &trans        &trans        &trans      &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &studio_unlock  &sys_reset    &ext_power EP_OFF  &ext_power EP_ON  &trans        &bl BL_OFF    &trans      &trans   &trans  &trans  &trans  &trans  &trans  &trans
        &trans          &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &trans      &trans   &trans  &trans  &trans  &trans  &trans  &trans
        &trans          &bt BT_CLR    &out OUT_USB       &out OUT_BLE      &out OUT_TOG  &trans                             &trans  &trans  &trans  &trans  &trans  &trans
        &trans          &trans        &trans             &trans            &trans        &trans        &trans      &trans   &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
