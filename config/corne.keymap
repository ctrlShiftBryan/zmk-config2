/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q        &kp W           &kp E           &kp R        &kp T        &kp Y      &kp U        &kp I                &kp O                 &kp P            &kp BACKSPACE
&kp ESCAPE      &kp A        &kp S           &kp D           &kp F        &kp G        &kp H      &kp J        &kp K                &kp L                 &kp SEMI         &mt RIGHT_GUI SQT
&kp LEFT_SHIFT  &mt LCTRL Z  &mt LEFT_GUI X  &mt LEFT_ALT C  &kp V        &kp B        &kp N      &kp M        &mt RIGHT_ALT COMMA  &mt RIGHT_GUI PERIOD  &mt RCTRL SLASH  &sk RIGHT_SHIFT
                                             &sl 2           &lt 2 SPACE  &kp SPACE    &kp ENTER  &lt 1 ENTER  &sl 1
            >;
        };

        sym {
            bindings = <
&kp PLUS     &kp EXCLAMATION  &kp AT_SIGN     &kp HASH         &kp DOLLAR            &kp PERCENT              &kp CARET  &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&kp PAGE_UP  &kp PAGE_DOWN    &kp SLASH       &kp BACKSLASH    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp LEFT   &kp DOWN       &kp UP         &kp RIGHT             &kp UNDERSCORE         &kp DELETE
&trans       &kp GRAVE        &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp EQUAL  &kp PIPE       &sk RIGHT_ALT  &sk RIGHT_GUI         &sk RCTRL              &trans
                                              &trans           &trans                &trans                   &trans     &trans         &trans
            >;
        };

        num {
            bindings = <
&kp EQUAL  &kp N1        &kp N2           &kp N3           &kp N4  &kp N5     &kp N6   &kp N7        &kp N8                  &kp N9                  &kp N0             &kp MINUS
&trans     &kp F1        &kp F2           &kp F3           &kp F4  &kp F5     &kp F12  &kp NUMBER_4  &kp N5                  &kp NUMBER_6            &none              &trans
&trans     &mt LCTRL F6  &mt LEFT_GUI F7  &mt LEFT_ALT F8  &kp F9  &kp F10    &kp F11  &kp NUMBER_1  &mt RIGHT_ALT NUMBER_2  &mt RIGHT_GUI NUMBER_3  &kp RIGHT_CONTROL  &trans
                                          &trans           &trans  &trans     &trans   &trans        &trans
            >;
        };

        nav {
            bindings = <
&none   &kp TAB        &kp LS(TAB)    &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &kp K_VOLUME_UP      &sk LA(LC(LG(LEFT_SHIFT)))  &kp PAGE_DOWN   &kp PG_UP     &none      &kp BACKSPACE  &trans
&trans  &none          &none          &none                              &none                                   &kp K_VOLUME_DOWN    &kp LEFT                    &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp ENTER      &trans
&trans  &kp LC(LS(H))  &kp RS(RC(L))  &kp K_BACK                         &kp K_FORWARD                           &kp K_PLAY_PAUSE     &mo 4                       &kp END         &kp HOME      &none      &kp DEL        &trans
                                      &trans                             &trans                                  &trans               &trans                      &trans          &trans
            >;
        };

        settings {
            bindings = <
&studio_unlock  &sys_reset    &ext_power EP_OFF  &ext_power EP_ON  &trans        &bl BL_OFF      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &bt BT_CLR    &trans             &trans            &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                                 &trans            &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
