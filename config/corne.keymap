/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>

&ext_power EP_ON

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp N0  &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y           &kp U  &kp I      &kp O    &kp P     &none
&none   &kp A  &kp S  &kp D  &kp F  &kp G        &kp H           &kp J  &kp K      &kp L    &kp SEMI  &none
&none   &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N           &kp M  &kp COMMA  &kp DOT  &kp FSLH  &none
                      &mo 1  &mo 1  &kp SPACE    &kp LEFT_SHIFT  &mo 2  &none
            >;
        };

        sym {
            bindings = <
&kp NUMBER_1  &kp ESC    &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp TILDE      &kp CARET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GRAVE        &trans
&trans        &kp MINUS  &kp ASTERISK      &kp EQUAL       &kp UNDERSCORE        &kp DOLLAR     &kp HASH   &sk RIGHT_GUI          &sk RIGHT_ALT    &sk RIGHT_CONTROL  &sk RIGHT_SHIFT  &trans
&trans        &kp PLUS   &kp PIPE          &kp AT_SIGN     &kp SLASH             &kp PERCENT    &none      &kp BACKSLASH          &kp AMPERSAND    &kp QUESTION       &kp EXCLAMATION  &trans
                                           &trans          &trans                &trans         &trans     &trans                 &trans
            >;
        };

        nav {
            bindings = <
&kp NUMBER_2  &kp TAB         &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp LS(TAB)    &kp TAB        &kp K_VOLUME_UP      &kp ESC  &kp ESC  &kp ESC  &kp ESC  &kp DEL        &trans
&trans        &kp LEFT_SHIFT  &kp RCTRL                          &kp LEFT_ALT   &kp LEFT_GUI   &kp K_VOLUME_DOWN    &kp ESC  &kp ESC  &kp ESC  &kp ESC  &kp BACKSPACE  &trans
&trans        &kp LC(LS(H))   &kp RS(RC(L))                      &kp K_FORWARD  &kp K_FORWARD  &kp K_PLAY_PAUSE     &kp ESC  &kp ESC  &kp ESC  &kp ESC  &kp ENTER      &trans
                                                                 &trans         &trans         &trans               &trans   &trans   &trans
            >;
        };

        num {
            bindings = <
&kp NUMBER_3  &kp N7     &kp N5        &kp NUMBER_3  &kp NUMBER_1  &kp N9     &kp N8   &kp N0   &kp NUMBER_2  &kp NUMBER_4  &kp NUMBER_6  &trans
&trans        &kp MINUS  &kp ASTERISK  &kp ESC       &kp ESC       &kp ESC    &kp ESC  &kp ESC  &kp ESC       &kp ESC       &kp ESC       &trans
&trans        &kp PLUS   &kp PIPE      &kp ESC       &kp ESC       &kp ESC    &kp ESC  &kp ESC  &kp ESC       &kp ESC       &kp ESC       &trans
                                       &trans        &trans        &trans     &trans   &trans   &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
