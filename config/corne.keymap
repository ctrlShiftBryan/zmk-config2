/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y           &kp U  &kp I      &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D  &kp F  &kp G        &kp H           &kp J  &kp K      &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N           &kp M  &kp COMMA  &kp DOT  &kp SQT   &none
                     &none  &mo 2  &kp SPACE    &kp LEFT_SHIFT  &mo 1  &none
            >;
        };

        sym {
            bindings = <
&none   &kp EXCLAMATION  &kp AT_SIGN     &kp HASH         &kp DOLLAR            &kp PERCENT              &kp CARET       &kp AMPERSAND  &kp ASTERISK   &kp MINUS          &kp PLUS         &trans
&trans  &kp ESCAPE       &kp SLASH       &kp BACKSLASH    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp UNDERSCORE  &sk RIGHT_GUI  &sk RIGHT_ALT  &sk RIGHT_CONTROL  &sk RIGHT_SHIFT  &trans
&trans  &kp GRAVE        &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp PIPE        &kp TILDE      &none          &none              &kp QUESTION     &trans
                                         &trans           &trans                &trans                   &trans          &mo 1          &trans
            >;
        };

        nav {
            bindings = <
&none   &kp TAB         &kp LS(TAB)    &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &kp K_VOLUME_UP      &kp BACKSPACE  &kp PAGE_DOWN   &kp PG_UP     &none      &kp BACKSPACE  &trans
&trans  &sk LEFT_SHIFT  &sk RCTRL      &sk LEFT_ALT                       &sk LEFT_GUI                            &kp K_VOLUME_DOWN    &kp LEFT       &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp ENTER      &trans
&trans  &kp LC(LS(H))   &kp RS(RC(L))  &kp K_BACK                         &kp K_FORWARD                           &kp K_PLAY_PAUSE     &mo 4          &kp END         &kp HOME      &none      &kp DEL        &trans
                                       &trans                             &mo 2                                   &trans               &trans         &trans          &trans
            >;
        };

        num {
            bindings = <
&none   &kp N1          &kp N2     &kp N3        &kp N4        &kp N5     &kp N6   &kp N7         &kp N8         &kp N9             &kp N0           &trans
&trans  &sk LEFT_SHIFT  &sk RCTRL  &sk LEFT_ALT  &sk LEFT_GUI  &kp F11    &kp F12  &sk RIGHT_GUI  &sk RIGHT_ALT  &sk RIGHT_CONTROL  &sk RIGHT_SHIFT  &trans
&trans  &kp F1          &kp F2     &kp F3        &kp F4        &kp F5     &kp F6   &kp F7         &kp F8         &kp F9             &kp F10          &trans
                                   &trans        &mo 2         &trans     &trans   &trans         &mo 1
            >;
        };

        settings {
            bindings = <
&none   &sys_reset    &ext_power EP_OFF  &ext_power EP_ON  &trans        &bl BL_OFF      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR    &trans             &trans            &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans            &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
